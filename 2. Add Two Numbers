/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        ListNode temp1=l1;
        ListNode temp2=l2;
        ListNode temp3=null;
        ListNode l3=null;
        int sum=0,carry=0;
        while(temp1!=null&&temp2!=null){
            sum=carry;
            sum=sum+temp1.val+temp2.val;
            ListNode node=new ListNode(sum%10);
            node.next=null;
            carry=sum/10;
            if(l3==null)
            {
                l3=node;
                temp3=node;
            }
            else
            {
                temp3.next=node;
                temp3=temp3.next;

            }
           temp1= temp1.next;
           temp2=temp2.next;


        }
        while(temp1!=null){
            sum=carry;
            sum=sum+temp1.val;
            ListNode node=new ListNode(sum%10);
            node.next=null;
            carry=sum/10;
            temp3.next=node;
            temp3=temp3.next;
            temp1=temp1.next;
        }
        while(temp2!=null){
            sum=carry;
            sum=sum+temp2.val;
            ListNode node=new ListNode(sum%10);
            node.next=null;
            carry=sum/10;
            temp3.next=node;
            temp3=temp3.next;
            temp2=temp2.next;

        }
        if(carry>0){
            ListNode node=new ListNode(carry);
            node.next=null;
            temp3.next=node;
        }
        return l3;
        
    }
}
